MinMaxFinderpublic class MaxMinFinder {
	public static int[] findMaxMin(int[] inputArr)
	{
		int[] minMaxValue = new int[2];
		int max = inputArr[0];
		int min = inputArr[0];
		
		for(int i = 1 ; i < inputArr.length ; i++)
		{
			if(inputArr[i] > max)          
				max=inputArr[i];
			if(inputArr[i] < min)          
				min=inputArr[i];
		}
		
		minMaxValue[0] = min;
		minMaxValue[1] = max;
		
		return minMaxValue; //returning array
	}
}


MinMaxFinderTest.java

import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
class MaxMinFinderTest {
	int[] result  = new int[2];
	@Test
	void test1() {
		result = MaxMinFinder.findMaxMin(new int[] {1,3,56,26,32,755,0,4535,42,21});
		int[] expectedResult = {0,4535};
		assertEquals(Arrays.toString(expectedResult), Arrays.toString(result));
	}	
	@Test
	void test2() {
		result = MaxMinFinder.findMaxMin(new int[] {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
		int[] expectedResult = {0,0};
		assertEquals(Arrays.toString(expectedResult), Arrays.toString(result));
	}
	@Test
	void test3() {
		result = MaxMinFinder.findMaxMin(new int[] {1,3,4,5,6,723,563,121231,545,2,56,6});
		int[] expectedResult = {1,121231};
		assertEquals(Arrays.toString(expectedResult), Arrays.toString(result));
	}
@Test
	void test4() {
		result = MaxMinFinder.findMaxMin(new int[] {0,324,234,23,521,55,555,55666,555,77});
		int[] expectedResult = {0,55666};
		assertEquals(Arrays.toString(expectedResult), Arrays.toString(result));
	}
	


@Test
	void test5() {
		result = MaxMinFinder.findMaxMin(new int[] {333,33,333,333,333,3333,3333333,333,33});
		int[] expectedResult = {33,3333333};
		assertEquals(Arrays.toString(expectedResult), Arrays.toString(result));
	}
}
